{"version":3,"file":"bundle.js","mappings":"mBA8CAA,QAAQC,IAAI,wB","sources":["webpack://aula052-webpack/./src/modules/ValidaCpf.js"],"sourcesContent":["export default class ValidaCpf {\r\n    constructor(cpfEnviado) {\r\n    Object.defineProperty(this, 'cpfLimpo', {\r\n        writable: false,\r\n        enumerable: true,\r\n        configurable: false,\r\n        value: cpfEnviado.replace(/\\D+/g, '')\r\n    });\r\n    }\r\n\r\n    éSequencia() {\r\n        return this.cpfLimpo.charAt(0).repeat(11) === this.cpfLimpo;\r\n    }\r\n\r\n    geraNovoCpf() {\r\n        const cpfParcial = this.cpfLimpo.slice(0,-2);\r\n        const digito1 = ValidaCpf.geraDigito(cpfParcial);\r\n        const digito2 = ValidaCpf.geraDigito(cpfParcial + digito1);\r\n        this.NovoCpf = cpfParcial + digito1 + digito2;\r\n    }\r\n\r\n    static geraDigito (cpfParcial) {\r\n        let total = 0;\r\n        let reverso = cpfParcial.length + 1;\r\n\r\n        for (let StringNumerica of cpfParcial) {\r\n            total += reverso * Number(StringNumerica);\r\n            reverso --;\r\n        }\r\n\r\n        const digito = 11 - (total % 11);\r\n        return digito <= 9 ? String(digito) : '0';\r\n    }\r\n\r\n    valida() {\r\n        if (!this.cpfLimpo) return false;\r\n        if(typeof this.cpfLimpo !== 'string') return false;\r\n        if (this.cpfLimpo.length !== 11) return false;\r\n        if(this.cpfLimpo.éSequencia === true) return false;\r\n        this.geraNovoCpf();\r\n        console.log(this.NovoCpf);\r\n\r\n        return this.NovoCpf === this.cpfLimpo;\r\n    }\r\n}\r\n\r\nconsole.log('cheguei dfddsdsdfsdfs');\r\n"],"names":["console","log"],"sourceRoot":""}